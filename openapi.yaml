openapi: 3.0.3
info:
  title: Task Management Application
  description: 'REST API NodeJS Application written in TypeScript with PostgreSQL Database for task management. Each task is assigned to a Project and can have up to 100 Tags. The Tasks can be filtered by their Tags, Projects and all other attributes that they contain. Request to this Application need to have a Authorization Header in form of Bearer Token.'
  version: 1.0.0
tags:
  - name: Projects
  - name: Tags
  - name: Tasks
security:
  - BearerTokenAuth: []
paths:
  /projects:
    post:
      tags:
        - Projects
      summary: Create new Project
      operationId: createProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectBase'
        required: true
        
      responses:
        '200':
          description: Created Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '401':
          description: Authorization failed due to bad Bearer Token
        '403':
          description: Project with given name already exists
        '422':
          description: Request properties are in the wrong format or state
        '500':
          description: Some Internal Error occurred
          
    get:
      tags:
        - Projects
      summary: Fetch existing Projects
      operationId: fetchProjects
      parameters:
        - in: query
          name: limit
          schema:
            type: number
            default: 10
          required: false
          description: Number of Projects returned
        - in: query
          name: offset
          schema:
            type: number
            default: 0
          required: false
          description: Number of Projects skipped
        - in: query
          name: name
          schema:
            type: string
            minLength: 1
            maxLength: 100
          required: false
          description: Text which should be contained by Project Name
        - in: query
          name: description
          schema:
            type: string
          required: false
          description: Text which should be contained by Project Description
        
      responses:
        '200':
          description: Existing Projects
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: number
                    example: 10
                  projects:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProjectResponse'
        '401':
          description: Authorization failed due to bad Bearer Token
        '422':
          description: Request properties are in the wrong format or state
        '500':
          description: Some Internal Error occurred
          
  /projects/{id}:
    patch:
      tags:
        - Projects
      summary: Update existing Project by ID
      operationId: updateProject
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
          description: Numeric ID of the project to update
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ProjectBase'
              minProperties: 1
        required: true
        
      responses:
        '200':
          description: Updated Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '401':
          description: Authorization failed due to bad Bearer Token
        '403':
          description: Project with given name already exists
        '404':
          description: Project for the given ID was not found
        '422':
          description: Request properties are in the wrong format or state
        '500':
          description: Some Internal Error occurred
                
    get:
      tags:
        - Projects
      summary: Fetch existing Project by ID
      operationId: fetchProject
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
          description: Numeric ID of the project to fetch
        - in: query
          name: withTasks
          schema:
            type: boolean
            default: false
          required: false
          description: Indicates whether or not to fetch also tasks for project
        
      responses:
        '200':
          description: Project with or without its Tasks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectWithTasksResponse'
        '401':
          description: Authorization failed due to bad Bearer Token
        '404':
          description: Project for the given ID was not found
        '422':
          description: Request properties are in the wrong format or state
        '500':
          description: Some Internal Error occurred
                    
    delete:
      tags:
        - Projects
      summary: Remove existing Project by ID
      description: Soft deletes the project if it exists and soft deletes all its related tasks
      operationId: removeProject
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
          description: Numeric ID of the project to delete
        
      responses:
        '204':
          description: Project has been successfully soft deleted
        '401':
          description: Authorization failed due to bad Bearer Token
        '404':
          description: Project for the given ID was not found
        '422':
          description: Request properties are in the wrong format or state
        '500':
          description: Some Internal Error occurred
  
  /tags:
    post:
      tags:
        - Tags
      summary: Create new Tags
      description: Creates new Tags if they already don't exist
      operationId: createTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tags'
        required: true
        
      responses:
        '200':
          description: Created Tags
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: number
                    example: 10
                  tags:
                    type: array
                    items:
                      $ref: '#/components/schemas/TagNames'
        '401':
          description: Authorization failed due to bad Bearer Token
        '422':
          description: Request properties are in the wrong format or state
        '500':
          description: Some Internal Error occurred
                      
    get:
      tags:
        - Tags
      summary: Fetch existing Tags
      operationId: fetchTags
      parameters:
        - in: query
          name: limit
          schema:
            type: number
            default: 10
          required: false
          description: Number of Tags returned
        - in: query
          name: offset
          schema:
            type: number
            default: 0
          required: false
          description: Number of Tags skipped
        - in: query
          name: name
          schema:
            type: string
            minLength: 1
            maxLength: 100
            description: 'Alphanumeric values with spaces in between'
          required: false
          description: Text which should be contained by Tags Names
        
      responses:
        '200':
          description: Existing Tags
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: number
                    example: 10
                  tags:
                    type: array
                    items:
                      $ref: '#/components/schemas/TagNames'
        '401':
          description: Authorization failed due to bad Bearer Token
        '422':
          description: Request properties are in the wrong format or state
        '500':
          description: Some Internal Error occurred
                
    delete:
      tags:
        - Tags
      summary: Delete Tags if they exist
      operationId: removeTags
      parameters:
        - in: query
          name: names
          schema:
            type: string
          example: 'football,hockey,running stuff'
          required: true
          description: Alphanumeric values with spaces in between separated by comma
        
      responses:
        '204':
          description: Tags were successfully removed if they existed
        '401':
          description: Authorization failed due to bad Bearer Token
        '409':
          description: Tasks with given tags exist
        '422':
          description: Request properties are in the wrong format or state
        '500':
          description: Some Internal Error occurred
  
  /tasks:
    post:
      tags:
        - Tasks
      summary: Create new Task
      operationId: createTask
      requestBody:
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskRequest'
        required: true
      responses:
        '200':
          description: Create Task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskWithProjectResponse'
        '401':
          description: Authorization failed due to bad Bearer Token
        '403':
          description: Cannot add over 100 tags to task
        '404':
          description: Project with given name does not exist
        '422':
          description: Request properties are in the wrong format or state
        '500':
          description: Some Internal Error occurred
                
    get:
      tags:
        - Tasks
      summary: Fetch existing Tasks
      operationId: fetchTasks
      parameters:
        - in: query
          name: limit
          schema:
            type: number
            default: 10
          required: false
          description: Number of Tasks returned
        - in: query
          name: offset
          schema:
            type: number
            default: 0
          required: false
          description: Number of Tasks skipped
        - in: query
          name: description
          schema:
            type: string
          required: false
          description: Text which should be contained by Task Description
        - in: query
          name: project
          schema:
            type: string
          required: false
          description: Name of the Project where the Task belongs
        - in: query
          name: tags
          schema:
            type: string
          example: 'futbal,hokej,running stuff'
          required: false
          description: Alphanumeric values with spaces in between separated by comma
        - in: query
          name: state
          schema:
            type: string
            example: new
            enum:
              - new
              - in progress
              - done
          required: false
          description: State of the Task
        
      responses:
        '200':
          description: Existing Tasks
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: number
                    example: 10
                  tasks:
                    type: array
                    items:
                      $ref: '#/components/schemas/TaskWithProjectResponse'
        '401':
          description: Authorization failed due to bad Bearer Token
        '422':
          description: Request properties are in the wrong format or state
        '500':
          description: Some Internal Error occurred
                      
  /tasks/{id}:
    patch:
      tags:
        - Tasks
      summary: Update existing Task by ID
      description: Updates values by replacing them, this counts for tags as well
      operationId: updateTask
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
          description: Numeric ID of the Task to update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdateRequest'
        required: true
        
      responses:
        '200':
          description: Updated Task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskWithProjectResponse'
        '401':
          description: Authorization failed due to bad Bearer Token
        '403':
          description: Cannot add over 100 tags to task
        '404':
          description: Task with given ID or Project with given name does not exist
        '422':
          description: Request properties are in the wrong format or state
        '500':
          description: Some Internal Error occurred
    
    get:
      tags:
        - Tasks
      summary: Fetch existing Task by ID
      operationId: fetchTask
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
          description: Numeric ID of the Task to fetch
        
      responses:
        '200':
          description: Existing Task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskWithProjectResponse'
        '401':
          description: Authorization failed due to bad Bearer Token
        '404':
          description: Task with given ID does not exist
        '422':
          description: Request properties are in the wrong format or state
        '500':
          description: Some Internal Error occurred
                
    delete:
      tags:
        - Tasks
      summary: delete existing Task by ID
      description: Soft deletes the task if it exists
      operationId: removeTask
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
          description: Numeric ID of the Task to remove
        
      responses:
        '204':
          description: Task has been successfully soft deleted
        '401':
          description: Authorization failed due to bad Bearer Token
        '404':
          description: Task with given ID does not exist
        '422':
          description: Request properties are in the wrong format or state
        '500':
          description: Some Internal Error occurred
  
  /tasks/{id}/tags:
    patch:
      tags:
        - Tasks
      summary: Adds Tags on existing Task by ID
      description: Adds Tags on the Task, if tags don't exist, creates them
      operationId: updateTaskTags
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
          description: Numeric ID of the Task to update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskTags'
        required: true
        
      responses:
        '200':
          description: Updated Task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskWithProjectResponse'
        '401':
          description: Authorization failed due to bad Bearer Token
        '403':
          description: Cannot add over 100 tags to task
        '404':
          description: Task with given ID does not exist
        '422':
          description: Request properties are in the wrong format or state
        '500':
          description: Some Internal Error occurred
                       
    delete:
      tags:
        - Tasks
      summary: Removes Tags from existing Task by ID
      description: Removes Tags from the Task, if tags don't exist on task or in general, skips them
      operationId: removeTaskTags
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
          description: Numeric ID of the Task to delete
        - in: query
          name: tags
          schema:
            type: string
          example: 'football,hockey,running stuff'
          required: true
          description: Alphanumeric values with spaces in between separated by comma
        
      responses:
        '200':
          description: Updated Task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskWithProjectResponse'
        '401':
          description: Authorization failed due to bad Bearer Token
        '404':
          description: Task with given ID does not exist
        '422':
          description: Request properties are in the wrong format or state
        '500':
          description: Some Internal Error occurred
 
components:
  schemas:
    TagNames:
      type: array
      minItems: 1
      maxItems: 100
      items:
        type: string
        minLength: 1
        maxLength: 100
        description: 'Alphanumeric values with spaces in between'
      example: ['sport', 'food', 'vehicle', 'running stuff']
    Tags:
      type: object
      properties:
        names:
          $ref: '#/components/schemas/TagNames'
      additionalProperties: false
    TaskTags:
      type: object
      properties:
        tags:
          $ref: '#/components/schemas/TagNames'
      additionalProperties: false
    TaskBase:
      type: object
      properties:
        description:
          type: string
          example: "do some dishes"
          minLength: 1
      additionalProperties: false
    TaskRequest:
      allOf:
        - $ref: '#/components/schemas/TaskBase'
        - type: object
          properties:
            project:
              type: string
              example: 'Home Duties'
              minLength: 1
              maxLength: 100
            tags:
              nullable: true
              allOf: 
                - $ref: '#/components/schemas/TagNames'
          additionalProperties: false
    TaskUpdateRequest:
      oneOf:
        - $ref: '#/components/schemas/TaskRequest'
        - type: object
          properties:
            state:
              type: string
              description: State of the Task
              example: in progress
              enum:
                - in progress
                - done
          minProperties: 1
          additionalProperties: false
    TaskResponse:
      allOf:
        - $ref: '#/components/schemas/TaskBase'
        - type: object
          properties:
            id:
              type: integer
              format: int64
              example: 12
            state:
              type: string
              description: State of the Task
              example: new
              enum:
                - new
                - in progress
                - done
            tags:
              $ref: '#/components/schemas/TagNames'
          additionalProperties: false
    TaskWithProjectResponse:
      allOf:
        - $ref: '#/components/schemas/TaskResponse'
        - type: object
          properties:
            project:
              $ref: '#/components/schemas/ProjectResponse'
    ProjectBase:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
          minLength: 1
          example: 'Skateboard Shenanigans'
        description:
          type: string
          nullable: true
          example: 'Cool tricks I did on my skateboard.'
      additionalProperties: false
    ProjectResponse:
      allOf:
        - $ref: '#/components/schemas/ProjectBase'
        - type: object
          properties:
            id:
              type: integer
              format: int64
              example: 10
            updatedAt:
              type: string
              format: date-time
              description: 'ISO Format'
              example: '2023-01-09T18:11:38.665Z'
          additionalProperties: false
    ProjectWithTasksResponse:
      allOf:
        - $ref: '#/components/schemas/ProjectResponse'
        - type: object
          properties:
            tasks:
              nullable: true
              type: array
              items:
                $ref: '#/components/schemas/TaskResponse'
          additionalProperties: false
  securitySchemes:
    BearerTokenAuth:
      type: apiKey
      name: Authorization
      in: header
      description: 'Test value: eyJhbGciOiJIUzI1NiJ9.aGVsbG93b3JsZA.vyzLvRb1Wd_T-1Zbh9E9GyqflKi5RFfr2-vinM70Ff0'