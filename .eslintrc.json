{
	"root": true,
	"env": {
		"node": true,
		"es2022": true
	},
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/recommended",
		"plugin:@typescript-eslint/recommended-requiring-type-checking",
		"plugin:import/recommended",
		"plugin:import/typescript",
		"prettier"
	],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaVersion": "latest",
		"sourceType": "module",
		"project": ["./tsconfig.json"]
	},
	"plugins": ["@typescript-eslint", "import"],
	"settings": {
		"import/resolver": {
			"typescript": true,
			"node": true
		}
	},
	"rules": {
		// eslint rules
		"semi": ["error", "never"],
		"no-multi-spaces": "error",
		"no-multiple-empty-lines": [
			"error",
			{
				"max": 1,
				"maxEOF": 0
			}
		],
		"prefer-const": "error",
		"prefer-arrow-callback": "error",
		"no-self-compare": "error",
		"require-atomic-updates": "error",
		"default-case": "error",
		"no-loop-func": "error",
		"no-unused-vars": "error",
		"eqeqeq": "warn",
		"comma-dangle": ["warn", "always-multiline"],
		"brace-style": "off",
		"dot-notation": "off",
		"no-duplicate-imports": "off",
		// import rules
		"import/order": [
			"error",
			{
				"newlines-between": "always",
				"groups": [
					"builtin",
					"external",
					"internal",
					"parent",
					"sibling",
					"index",
					"object",
					"type"
				],
				"alphabetize": {
					"order": "asc",
					"caseInsensitive": true
				}
			}
		],
		"import/no-duplicates": "error",
		// @typescript-eslint rules
		"@typescript-eslint/consistent-type-exports": "error",
		"@typescript-eslint/consistent-type-imports": "error",
		"@typescript-eslint/naming-convention": [
			"error",
			{
				"selector": "default",
				"format": ["camelCase"]
			},

			{
				"selector": "variable",
				"format": ["camelCase", "UPPER_CASE"]
			},
			{
				"selector": "parameter",
				"format": ["camelCase"],
				"leadingUnderscore": "allow"
			},

			{
				"selector": "memberLike",
				"modifiers": ["private"],
				"format": ["camelCase"],
				"leadingUnderscore": "require"
			},

			{
				"selector": "typeLike",
				"format": ["PascalCase"]
			},
			{
				"selector": "variable",
				"types": ["boolean"],
				"format": ["PascalCase"],
				"prefix": ["is", "should", "has", "can", "did", "will", "does"]
			},
			{
				"selector": "variable",
				"modifiers": ["destructured"],
				"format": null
			},
			{
				"selector": [
					"classProperty",
					"objectLiteralProperty",
					"typeProperty",
					"classMethod",
					"objectLiteralMethod",
					"typeMethod",
					"accessor",
					"enumMember"
				],
				"format": null,
				"modifiers": ["requiresQuotes"]
			},
			{
				"selector": "interface",
				"format": ["PascalCase"],
				"custom": {
					"regex": "^I[A-Z]",
					"match": true
				}
			}
		],
		"@typescript-eslint/no-duplicate-enum-values": "error",
		"@typescript-eslint/no-empty-interface": "error",
		"@typescript-eslint/no-explicit-any": "error",
		"@typescript-eslint/no-floating-promises": "error",
		"@typescript-eslint/no-misused-promises": "off",
		"@typescript-eslint/no-namespace": "error",
		"@typescript-eslint/no-require-imports": "error",
		"@typescript-eslint/promise-function-async": "error",
		"@typescript-eslint/explicit-function-return-type": "error",
		"@typescript-eslint/no-unused-vars": "error",
		"@typescript-eslint/consistent-type-definitions": "warn",
		"@typescript-eslint/array-type": "warn",
		"@typescript-eslint/no-unsafe-return": "warn",
		"@typescript-eslint/prefer-nullish-coalescing": "warn",
		"@typescript-eslint/prefer-optional-chain": "warn",
		"@typescript-eslint/prefer-ts-expect-error": "warn",
		"@typescript-eslint/sort-type-constituents": "warn",
		"@typescript-eslint/sort-type-union-intersection-members": "warn",
		// @typescript-eslint extension rules
		"@typescript-eslint/brace-style": "warn",
		"@typescript-eslint/dot-notation": "warn"
	}
}
